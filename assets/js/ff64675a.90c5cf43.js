"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57],{80024:e=>{e.exports=JSON.parse('{"functions":[{"name":"Values","desc":"Returns all the player data\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"DS0SavedPlayer"}],"function_type":"static","source":{"line":788,"path":"src/DS0.lua"}},{"name":"Get","desc":"Returns the value of a key\\n\\n```lua\\nprint(`Client has {DS0.Client.Get(\\"Wins\\")} wins!`)\\n```\\n\\nEquivalent to:\\n```lua\\nDS0.Client.Values()[key]\\n```\\n\\n    ","params":[{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"static","source":{"line":807,"path":"src/DS0.lua"}},{"name":"OnKeyChanged","desc":"Adds an event listener to call `callback` when `key` has changed. This listener is removed when the player leaves the game\\n\\n```lua\\nDS0.Client.OnKeyChanged(\\"Wins\\", function(newValue)\\n    print(`Wins is now {newValue}!`)\\nend)\\n```\\n\\n    ","params":[{"name":"key","desc":"","lua_type":"string"},{"name":"callback","desc":"","lua_type":"DS0KeyChangedCallback"}],"returns":[{"desc":"","lua_type":"CallbackRemover"}],"function_type":"static","source":{"line":823,"path":"src/DS0.lua"}}],"properties":[],"types":[],"name":"ClientDS0","desc":"The client will request the player\'s saved data to the server initially,\\nand after that every change in the player\'s data will be replicated to the client.\\n\\nThe client can be generally thought of as a [DS0Player] but without the Set method.\\n\\nReacting to changes on a key *(see [ClientDS0.OnKeyChanged])*:\\n```lua\\nlocal currentWins = DS0.Client.Get(\\"Wins\\")\\nprint(`Current wins is {currentWins}!`)\\nDS0.Client.OnKeyChanged(\\"Wins\\", function(newValue)\\n    currentWins = newValue\\n    print(`Wins is now {currentWins}!`)\\n    -- do something else with currentWins...\\nend)\\n```","source":{"line":761,"path":"src/DS0.lua"}}')}}]);