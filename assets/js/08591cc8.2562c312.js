"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[639],{73765:e=>{e.exports=JSON.parse('{"functions":[{"name":"Values","desc":"Returns all the player data\\n\\n        ","params":[],"returns":[{"desc":"","lua_type":"DS0SavedPlayer"}],"function_type":"static","source":{"line":253,"path":"src/DS0.lua"}},{"name":"Get","desc":"Returns the value of a key\\n\\n```lua\\nprint(`Player has {ds0Player.Get(\\"Wins\\")} wins!`)\\n```\\n\\nEquivalent to:\\n```lua\\nds0Player.Values()[key]\\n```\\n\\n        ","params":[{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"static","source":{"line":272,"path":"src/DS0.lua"}},{"name":"OnKeyChanged","desc":"Adds an event listener to call `callback` when `key` has changed. This listener is removed when the player leaves the game\\n\\n```lua\\nds0Player.OnKeyChanged(\\"Wins\\", function(newValue)\\n    print(`Wins is now {newValue}!`)\\nend)\\n```\\n\\n        ","params":[{"name":"key","desc":"","lua_type":"string"},{"name":"callback","desc":"","lua_type":"DS0KeyChangedCallback"}],"returns":[{"desc":"","lua_type":"CallbackRemover"}],"function_type":"static","source":{"line":288,"path":"src/DS0.lua"}},{"name":"Set","desc":"Sets `key` to `value` and replicates the change to the client.\\nA change won\'t be triggered if the value is not a table and is the same as the previous one.\\nFor tables changes won\'t be compared to the previous value.\\n\\nIf a function is provided as `value`,\\nit will be called with the current\\nvalue of `key` as the first argument,\\nand `key` will be set to the return value.\\n\\nIf a table is provided as the first argument,\\nthe second argument will be ignored and\\n[DS0Player.Set] will be called for every element \\nin the table with the key as `key` and the value as `value`.\\n\\nSimple set\\n```lua\\nds0Player.Set(\\"Wins\\", 5)\\n```\\n\\nSet using function\\n```lua\\nds0Player.Set(\\"Wins\\", function(currentValue)\\n    -- Increment the current value by 1\\n    return currentValue + 1\\nend)\\n```\\n\\nSet using table\\n```lua\\nds0Player.Set({\\n    Wins = function(currentValue)\\n        -- Increment the current value by 1\\n        return currentValue + 1\\n    end,\\n    InventoryItems = {\\"Potion\\"}\\n})\\n```\\n\\n        ","params":[{"name":"key","desc":"","lua_type":"string | DS0SetTable"},{"name":"value","desc":"","lua_type":"any | DS0SetCallback"}],"returns":[],"function_type":"static","yields":true,"source":{"line":337,"path":"src/DS0.lua"}},{"name":"IsConnected","desc":"Returns `true` if the player is still in the game or hasn\'t been disconnected through [DS0Player.Disconnect].\\n        ","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":365,"path":"src/DS0.lua"}},{"name":"Disconnect","desc":"Sets [DS0Player.IsConnected] to false. **This function is automatically called when the player leaves the game**\\n        ","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":374,"path":"src/DS0.lua"}},{"name":"_setloaded","desc":"Sets the player loaded to true\\n        ","params":[],"returns":[],"function_type":"static","private":true,"source":{"line":383,"path":"src/DS0.lua"}},{"name":"IsLoaded","desc":"Returns `true` if the player has been successfully initialized.\\n        ","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":392,"path":"src/DS0.lua"}}],"properties":[],"types":[],"name":"DS0Player","desc":"A player that can be written to and read from.\\nUse [ServerDS0.GetPlayer] to get a [DS0Player] from a [Player] or [ServerDS0.OnPlayerLoaded] to listen to when a player has been initialized.\\n        ","realm":["Server"],"source":{"line":240,"path":"src/DS0.lua"}}')}}]);